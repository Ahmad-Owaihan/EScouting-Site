@using Microsoft.AspNet.Identity

@model EScouting.Models.ClubViewModel
@{
    /**/

    ViewBag.Title = "Coach";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Request.IsAuthenticated)
{
    <p class="blue">You have received an offer from <span class="red">@Model.CoachName</span> to join his club.</p>
    var player = Model.Users.SingleOrDefault(u => u.Id == User.Identity.GetUserId());
    if (Model.Invitations.Where(u => u.FromId == Model.CoachId && u.ToId == player.Id).Any())
    {
        using (Html.BeginForm("AcceptOffer", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.HiddenFor(x => x.UserId, new { @Value = player.Id });
            @Html.HiddenFor(x => x.ClubId);
            @Html.HiddenFor(x => x.CoachId);
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-join" value="Join Club" />
                </div>
            </div>
        }
        using (Html.BeginForm("DeclineOffer", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.HiddenFor(x => x.UserId, new { @Value = player.Id });
            @Html.HiddenFor(x => x.ClubId);
            @Html.HiddenFor(x => x.CoachId);
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-decline" value="Decline Offer" />
                </div>
            </div>
        }
    }
}

<h1>Coach Name: @Model.CoachName</h1>


@if (!Model.HasClub)
{
    <p>no club. please create one</p>
    using (Html.BeginForm("CreateClub", "Player", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Club.Name, new { @class = "col-2 control-labelr" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Club.Name, new { @class = "form-control" })
            </div>
        </div>
        @Html.HiddenFor(x => x.CoachId);
        @Html.HiddenFor(x => x.CoachName);
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }
}
else
{
    <p>Club Name: @Model.Club.Name</p>

    if (!Model.Members.Any(c => c.UserTypeId == 1))
    {
        <p>no members yet</p>
    }
    else
    {
        <table id="playersTable" class="table table-dark table-hover">
            <thead>
                <tr>
                    <th>Player</th>
                    <th>EP</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var player in Model.Members.Where(x => x.UserTypeId == 1))
                {
                    <tr>
                        <td>@Html.ActionLink(player.Name, "Details", "Player", new { id = player.Id }, null)</td>
                        <td>@player.EPoints.ToString("#.#")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}