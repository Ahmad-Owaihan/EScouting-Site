@model EScouting.Models.SummonerViewModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //list for counting champs played
    var listChampsPlayed = new List<int>();

    //count roles played
    var countMid = 0;
    var countTop = 0;
    var countAdc = 0;
    var countSupport = 0;
    var countJungler = 0;
    if (Model.Matches.matches != null)
    {
        foreach (var match in Model.Matches.matches)
        {
            listChampsPlayed.Add(match.champion);

            if (match.lane == "BOTTOM")
            {
                if (match.role == "DUO_SUPPORT")
                {
                    countSupport++;
                }
                if (match.role == "DUO_CARRY")
                {
                    countAdc++;
                }
            }
            else if (match.lane == "MID")
            {
                countMid++;
            }
            else if (match.lane == "TOP")
            {
                countTop++;
            }
            else if (match.lane == "Jungle")
            {
                countJungler++;
            }
            else if (match.role == "DUO_SUPPORT")
            {
                countSupport++;
            }
            else if (match.role == "DUO_CARRY")
            {
                countAdc++;
            }
        }
    }
    List<int> listRoles= new List<int>() { countAdc, countSupport, countJungler, countMid, countTop };
    var max = listRoles.Max();
    var role = "";
    if (max == countAdc)
    {
        role = "Adc";
    }
    else if (max == countSupport)
    {
        role = "Support";
    }
    else if (max == countMid)
    {
        role = "Mid";
    }
    else if (max == countTop)
    {
        role = "Top";
    }
    else if (max == countJungler)
    {
        role = "Jungler";
    }
    else
    {
        role = "Unknown Role";
    }

    var groupListOfChamps = listChampsPlayed.GroupBy(c => c);
}

<h2>account id: @Model.Summoner.accountId</h2>
<h2>summoner id: @Model.Summoner.id</h2>
@foreach (var rank in Model.League)
{
    <h2>@rank.queueType</h2>
    <h2>@rank.tier</h2>
    <h2>@rank.rank</h2>
}

@if (Model.Matches.matches != null)
{
    <h2>Main role @role </h2>

    foreach (var champ in groupListOfChamps)
    {
        <h2>Champ: @champ.Key  games played: @champ.Count()</h2>
    }
}
else
{
    <h3>Player is inactive</h3>
}


