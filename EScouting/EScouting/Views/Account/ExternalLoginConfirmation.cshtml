@model EScouting.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}
<h2>@ViewBag.Title.</h2>
<h3>Associate your @ViewBag.LoginProvider account.</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Association Form</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <p class="text-info">
        Welcome new User! You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
        Please fill in the details below to create an account for future easy access.
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.UserTypeId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(p => p.User.UserTypeId, new SelectList(Model.UserTypes, "Id", "Name"), "....", new { @class = "form-control", @id = "target-user-type" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.RegionId, new { @class = "col-md-2 control-label if-player" })
        <div class="col-md-10">
            @Html.DropDownListFor(p => p.User.RegionId, new SelectList(Model.Regions, "Id", "Name"), "....", new { @class = "form-control if-player" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.CountryId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(p => p.User.CountryId, new SelectList(Model.Countries, "Id", "Name"), "....", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.SummonerName, new { @class = "col-md-2 control-label if-player" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.SummonerName, new { @class = "form-control if-player" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.User.RoleId, new { @class = "col-2 control-label if-player" })
        <div class="col-md-10">
            @Html.DropDownListFor(p => p.User.RoleId, new SelectList(Model.Roles, "Id", "Name"), "....", new { @class = "form-control if-player" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            console.log("hello");

            $('#target-user-type').change(function () {
                var id = $('#target-user-type').val(); // coach or player
                console.log(id);
                if (id == 2) {
                    //if user selects coach option
                    //hide player options
                    $('.if-player').hide();
                    console.log("coach");
                } else // if player selects player option
                {
                    $('.if-player').show();
                    console.log("player");
                }
            });
        });

    </script>
}
